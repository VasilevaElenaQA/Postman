{
	"info": {
		"_postman_id": "3086ae47-3319-46c4-b4ce-af61afe65ff1",
		"name": "Postman №2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20586637"
	},
	"item": [
		{
			"name": "EP_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Elena",
							"type": "text"
						},
						{
							"key": "password",
							"value": "5694",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"    let jsonData = pm.response.json();\r",
							"//console.log (jsonData)\r",
							"    \r",
							"pm.test(\"Test name\", function () {\r",
							"        pm.expect(jsonData.name).to.eql(\"Elena\");\r",
							"      });\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"\r",
							"pm.test(\"Test age\", function () {\r",
							"        pm.expect(jsonData.age).to.eql(\"32\");\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"\r",
							"pm.test(\"Test salary\", function () {\r",
							"        pm.expect(jsonData.salary).to.eql(936);\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"let reqData = request.data;\r",
							"//console.log (reqData)\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"\r",
							"pm.test(\"Test name1\", function () {\r",
							"        pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Test age1\", function () {\r",
							"        pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Test salary1\", function () {\r",
							"        pm.expect(jsonData.salary).to.eql(+reqData.salary);\r",
							"});\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log (jsonData.family)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"        pm.expect(jsonData.family.u_salary_1_5_year).to.eql(+reqData.salary*4); });\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Elena",
							"type": "text"
						},
						{
							"key": "age",
							"value": "32",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "936",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Elena/jjd909/45672kjkWpqc933123456189215evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"let JsonData = JSON.parse (responseBody);\r",
							"//console.log (JsonData)\r",
							"\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"//console.log (reqData)\r",
							"\r",
							"pm.test(\"test name\", function () {\r",
							"    pm.expect(JsonData.name).to.eql(reqData.name);\r",
							"//console.log (JsonData.name)\r",
							"//console.log (reqData.name)\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"test age\", function () {\r",
							"   pm.expect(JsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"test salary\", function () {\r",
							"     pm.expect(JsonData.salary).to.eql(+reqData.salary);});\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"    console.log (JsonData.family)\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"//10. Проверить, что у параметра dog есть параметры age \r",
							"pm.test(\"dog name\", function () {\r",
							"    pm.expect(JsonData.family.pets.dog).to.have.property(\"name\");});\r",
							"pm.test(\"dog age\", function () {\r",
							"        pm.expect(JsonData.family.pets.dog).to.have.property(\"age\");});\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"name Luky\", function () {    \r",
							"    pm.expect(JsonData.family.pets.dog.name).to.eql(\"Luky\");});\r",
							"pm.test(\"name age\", function () {\r",
							"        pm.expect(JsonData.family.pets.dog.age).to.be.oneOf([4])});      \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Elena&age=32&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2. Статус код 200*/\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);});\r",
							"//3. Спарсить response body в json.\r",
							"//4. Спарсить request.\r",
							"\r",
							"let JsonData = JSON.parse (responseBody);\r",
							"//console.log (JsonData)\r",
							"let reqData = pm.request.url.query.toObject();\r",
							"//console.log (reqData)\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"test name\", function () {\r",
							"      pm.expect(JsonData.name).to.eql(reqData.name);});\r",
							"/*6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"7. Вывести в консоль параметр salary из request.\r",
							"8. Вывести в консоль параметр salary из response.\r",
							"9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.*/\r",
							"\r",
							"pm.test(\"test age\", function () {\r",
							"    pm.expect(JsonData.age).to.eql(+reqData.age);\r",
							"    console.log (JsonData)\r",
							"    console.log (JsonData.salary)\r",
							"    console.log (JsonData.salary[0])\r",
							"    console.log(JsonData.salary[1])\r",
							"    console.log(JsonData.salary[2])\r",
							"});\r",
							"/*12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)*/\r",
							"\r",
							"pm.test(\"salary[0]\", function () {\r",
							"     pm.expect(JsonData.salary[0]).to.eql(+reqData.salary);});\r",
							"\r",
							"pm.test(\"Salary [1]\", function () {    \r",
							"    pm.expect(+JsonData.salary[1]).to.eql(+reqData.salary*2);\r",
							"});\r",
							"pm.test(\"Salary [2]\", function () {    \r",
							"    pm.expect(+JsonData.salary[2]).to.eql(+reqData.salary*3);\r",
							"    });\r",
							"\r",
							"/*15. Создать в окружении переменную name+\r",
							"16. Создать в окружении переменную age+\r",
							"17. Создать в окружении переменную salary+\r",
							"18. Передать в окружение переменную name\r",
							"19. Передать в окружение переменную age\r",
							"20. Передать в окружение переменную salary*/\r",
							"\r",
							"\r",
							"pm.environment.set(\"name\", JsonData.name)\r",
							"pm.environment.set(\"age\", JsonData.age)\r",
							"pm.environment.set(\"salary\", JsonData.salary[0])\r",
							"\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"\r",
							"for ( let i = 0; i < JsonData.salary.length; i++)\r",
							"console.log(JsonData.salary[i])\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Elena&age=32&salary=936",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Elena"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "936"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"   \r",
							"   var jsonData = pm.response.json();\r",
							"   var reqData = request.data;\r",
							"  console.log (reqData)\r",
							"  console.log (jsonData)\r",
							"\r",
							"  //. Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"// Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//13. Проверить, что json response имеет параметр person\r",
							"pm.test(\"persons\", function () {\r",
							"      pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"//14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Salary800\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+reqData.salary);});\r",
							"\r",
							"//15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"after_6_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+reqData.salary*2);});\r",
							"    \r",
							"//16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+reqData.salary*2.7);});\r",
							"\r",
							"//17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.) \r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(reqData.salary*3.3);});\r",
							"//console.log (reqData.salary*3.3)\r",
							"\r",
							"//18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(reqData.salary*3.8);});\r",
							"\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"person_u_name\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+reqData.salary);});\r",
							"\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"age32\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+reqData.age);});\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+reqData.salary*4.2);});\r",
							"\r",
							"// ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"\r",
							"for ( let i in jsonData.person) \r",
							"console.log ( i, jsonData.person[i])\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "\"/s34lfgbj/Elena/jjd909/58960kjkWpqc49925694397164evny\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}